language: c

compiler:
  - gcc

addons:
  apt:
    update: true
    packages:
      - cmake
      - lcov
      - valgrind
      - libgtest-dev
      - clang

install:
  # first we create a directory for the CMake binaries
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
  # we use wget to fetch the cmake binaries
  - travis_retry wget --no-check-certificate https://cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz
  # this is optional, but useful:
  # do a quick md5 check to ensure that the archive we downloaded did not get compromised
  - echo "f3546812c11ce7f5d64dc132a566b749 *cmake-3.3.2-Linux-x86_64.tar.gz" > cmake_md5.txt
  - md5sum -c cmake_md5.txt
  # extract the binaries; the output here is quite lengthy,
  # so we swallow it to not clutter up the travis console
  - tar -xvf cmake-3.3.2-Linux-x86_64.tar.gz > /dev/null
  - mv cmake-3.3.2-Linux-x86_64 cmake-install
  # add both the top-level directory and the bin directory from the archive
  # to the system PATH. By adding it to the front of the path we hide the
  # preinstalled CMake with our own.
  - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
  # don't forget to switch back to the main build directory once you are done
  - cd ${TRAVIS_BUILD_DIR}
before_script:
  - cd /usr/src/gtest
  - sudo cmake CMakeLists.txt
  - sudo make
  - sudo cp *.a /usr/lib
  - cd /home/travis/build/nezhibitskiy/advanced_c_cpp

jobs:
  include:
    - name: "Building"
      script:
        - mkdir build
        - cd build
        - cmake ..
        - make
    - name: "Unit tests"
      script:
        - mkdir unit_tests
        - cd unit_tests
        - cmake ..
        - make
        - cd tests/unit/file_reader
        - ./file_reader_test
        - cd ../searcher
        - ./searcher_test
        - cd ../file_word_searcher
        - ./file_word_searcher_sync_test
        - ./file_word_searcher_async_test
    - name: "Valgrind"
      script:
        - mkdir valgrind
        - cd valgrind
        - cmake ..
        - make
        - cd tests/unit/file_word_searcher
        - valgrind --tool=memcheck --leak-check=full ./file_word_searcher_sync_test
        - valgrind --tool=memcheck --leak-check=full ./file_word_searcher_async_test
    - name: "Stress test"
      script:
        - bash stress_tests.sh
    - name: "Sanitizer address"
      script:
        - mkdir build
        - cd build
        - cmake -Daddress=ON -Dparallel=OFF ..
        - make
        - cmake -Daddress=ON -Dparallel=ON ..
        - make
    - name: "Sanitizer memory"
      script:
        - mkdir build
        - cd build
        - cmake -Dmemory=ON -Dparallel=OFF ..
        - make
        - cmake -Dmemory=ON -Dparallel=ON ..
        - make
    - name: "Sanitizer undefined"
      script:
        - mkdir build
        - cd build
        - cmake -Dundefined=ON -Dparallel=OFF ..
        - make
        - cmake -Dundefined=ON -Dparallel=ON ..
        - make
    - name: "Sanitizer thread"
      script:
        - mkdir build
        - cd build
        - cmake -Dthread=ON -Dparallel=OFF ..
        - make
        - cmake -Dthread=ON -Dparallel=ON ..
        - make